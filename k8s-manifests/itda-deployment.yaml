apiVersion: apps/v1
kind: Deployment
metadata:
  name: itda-ui
  namespace: itda-fe-ns
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app: itda-ui
spec:
  replicas: 3
  selector:
    matchLabels:
      app: itda-ui
  template:
    metadata:
      labels:
        app: itda-ui
    spec:
      serviceAccountName: itda-secrets-access
      containers:
        - name: itda-ui
          image: 655088038759.dkr.ecr.ap-northeast-2.amazonaws.com/itda-ui:latest
          ports:
            - containerPort: 5174
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          env:
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: itda-ui.conf
                  key: PORT
          volumeMounts:
            - name: aws-secrets
              mountPath: "/mnt/secrets-store"
              readOnly: true
      volumes:
        - name: aws-secrets
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "aws-secrets-itda-ui"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: itda-auth
  namespace: itda-be-ns
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    # Image Updater annotations
  labels:
    app: itda-auth
spec:
  replicas: 3
  selector:
    matchLabels:
      app: itda-auth
  template:
    metadata:
      labels:
        app: itda-auth
    spec:
      serviceAccountName: itda-secrets-access
      containers:
        - name: itda-auth
          image: 655088038759.dkr.ecr.ap-northeast-2.amazonaws.com/itda-auth:latest
          ports:
            - containerPort: 3001
          resources:
            requests:
              cpu: "50m"
              memory: "128Mi"
            limits:
              cpu: "200m"
              memory: "256Mi"
          env:
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: itda-auth.conf
                  key: PORT
          volumeMounts:
            - name: aws-secrets
              mountPath: "/mnt/secrets-store"
              readOnly: true
      volumes:
        - name: aws-secrets
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "aws-secrets-itda-auth"
      # 프로브 설정 (예시)
      livenessProbe:
        httpGet:
          path: /healthz
          port: 3001
        initialDelaySeconds: 30
        periodSeconds: 15
        timeoutSeconds: 10
        failureThreshold: 3

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: itda-search
  namespace: itda-be-ns
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app: itda-search
spec:
  replicas: 3
  selector:
    matchLabels:
      app: itda-search
  template:
    metadata:
      labels:
        app: itda-search
    spec:
      serviceAccountName: itda-secrets-access
      containers:
        - name: itda-search
          image: 655088038759.dkr.ecr.ap-northeast-2.amazonaws.com/itda-search:latest
          ports:
            - containerPort: 3002
          resources:
            requests:
              cpu: "200m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"
          env:
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: itda-search.conf
                  key: PORT
          volumeMounts:
            - name: aws-secrets
              mountPath: "/mnt/secrets-store"
              readOnly: true
      volumes:
        - name: aws-secrets
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "aws-secrets-itda-search"
      livenessProbe:
        httpGet:
          path: /healthz
          port: 3002
        initialDelaySeconds: 30
        periodSeconds: 15
        timeoutSeconds: 10
        failureThreshold: 3
      readinessProbe:
        httpGet:
          path: /ready
          port: 3002
        initialDelaySeconds: 30
        periodSeconds: 15
        timeoutSeconds: 10
        failureThreshold: 3

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: itda-lyrics
  namespace: itda-be-ns
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app: itda-lyrics
spec:
  replicas: 3
  selector:
    matchLabels:
      app: itda-lyrics
  template:
    metadata:
      labels:
        app: itda-lyrics
    spec:
      serviceAccountName: itda-secrets-access
      containers:
        - name: itda-lyrics
          image: 655088038759.dkr.ecr.ap-northeast-2.amazonaws.com/itda-lyrics:latest
          ports:
            - containerPort: 3003
          resources:
            requests:
              cpu: "200m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          env:
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: itda-lyrics.conf
                  key: PORT
          volumeMounts:
            - name: aws-secrets
              mountPath: "/mnt/secrets-store"
              readOnly: true
      volumes:
        - name: aws-secrets
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "aws-secrets-itda-lyrics"
      livenessProbe:
        httpGet:
          path: /healthz
          port: 3003
        initialDelaySeconds: 30
        periodSeconds: 15
        timeoutSeconds: 10
        failureThreshold: 3
      readinessProbe:
        httpGet:
          path: /ready
          port: 3003
        initialDelaySeconds: 30
        periodSeconds: 15
        timeoutSeconds: 10
        failureThreshold: 3

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: itda-translation
  namespace: itda-be-ns
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app: itda-translation
spec:
  replicas: 3
  selector:
    matchLabels:
      app: itda-translation
  template:
    metadata:
      labels:
        app: itda-translation
    spec:
      serviceAccountName: itda-secrets-access
      containers:
        - name: itda-translation
          image: 655088038759.dkr.ecr.ap-northeast-2.amazonaws.com/itda-translation:latest
          ports:
            - containerPort: 3004
          resources:
            requests:
              cpu: "200m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          env:
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: itda-translating.conf
                  key: PORT
          volumeMounts:
            - name: aws-secrets
              mountPath: "/mnt/secrets-store"
              readOnly: true
      volumes:
        - name: aws-secrets
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "aws-secrets-itda-translation"
      livenessProbe:
        httpGet:
          path: /healthz
          port: 3004
        initialDelaySeconds: 30
        periodSeconds: 15
        timeoutSeconds: 10
        failureThreshold: 3
      readinessProbe:
        httpGet:
          path: /ready
          port: 3004
        initialDelaySeconds: 30
        periodSeconds: 15
        timeoutSeconds: 10
        failureThreshold: 3

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: itda-playlist
  namespace: itda-be-ns
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app: itda-playlist
spec:
  replicas: 3
  selector:
    matchLabels:
      app: itda-playlist
  template:
    metadata:
      labels:
        app: itda-playlist
    spec:
      serviceAccountName: itda-secrets-access
      containers:
        - name: itda-playlist
          image: 655088038759.dkr.ecr.ap-northeast-2.amazonaws.com/itda-playlist:latest
          ports:
            - containerPort: 3005
          resources:
            requests:
              cpu: "50m"
              memory: "128Mi"
            limits:
              cpu: "200m"
              memory: "256Mi"
          env:
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: itda-playlist.conf
                  key: PORT
          volumeMounts:
            - name: aws-secrets
              mountPath: "/mnt/secrets-store"
              readOnly: true
      volumes:
        - name: aws-secrets
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "aws-secrets-itda-playlist"
      livenessProbe:
        httpGet:
          path: /healthz
          port: 3005
        initialDelaySeconds: 30
        periodSeconds: 15
        timeoutSeconds: 10
        failureThreshold: 3
      readinessProbe:
        httpGet:
          path: /ready
          port: 3005
        initialDelaySeconds: 30
        periodSeconds: 15
        timeoutSeconds: 10
        failureThreshold: 3

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: itda-redis
  namespace: itda-redis-ns
  labels:
    app: itda-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: itda-redis
  template:
    metadata:
      labels:
        app: itda-redis
    spec:
      imagePullSecrets:
        - name: aws-ecr-creds
      containers:
        - name: itda-redis
          image: 655088038759.dkr.ecr.ap-northeast-2.amazonaws.com/itda-redis:1.0
          ports:
            - containerPort: 6379
#뿡뿡
